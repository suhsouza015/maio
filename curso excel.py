import streamlit as st
import pandas as pd
import re # Para express√µes regulares, √∫til na valida√ß√£o de f√≥rmulas

def curso_excel():
    st.set_page_config(layout="wide", page_title="Curso de Excel: Do Zero ao Expert")
    st.title("üöÄ Curso de Excel: Do Zero ao Expert")
    st.write("Seja bem-vindo(a)! Prepare-se para dominar o Excel com este curso interativo e pr√°tico. Vamos construir seu conhecimento passo a passo.")

    st.sidebar.header("Navega√ß√£o do Curso")
    modulo_selecionado = st.sidebar.radio(
        "Escolha o m√≥dulo:",
        ("üëã In√≠cio R√°pido e Interface",
         "üî¢ Excel B√°sico: C√°lculos e L√≥gica",
         "üîç Excel Intermedi√°rio: Buscas e Condi√ß√µes M√∫ltiplas",
         "üìä Excel Avan√ßado: An√°lise e Automa√ß√£o",
         "üí° Dicas de Produtividade e Boas Pr√°ticas",
         "üöÄ Desvendando o Power Query",
         "üèÜ Projeto Final: Dashboard Interativo"
         )
    )

    # --- Fun√ß√µes para cada m√≥dulo ---
    if modulo_selecionado == "üëã In√≠cio R√°pido e Interface":
        introducao_excel()
        quiz_introducao()
    elif modulo_selecionado == "üî¢ Excel B√°sico: C√°lculos e L√≥gica":
        excel_basico()
        quiz_basico()
    elif modulo_selecionado == "üîç Excel Intermedi√°rio: Buscas e Condi√ß√µes M√∫ltiplas":
        excel_intermediario()
        quiz_intermediario()
    elif modulo_selecionado == "üìä Excel Avan√ßado: An√°lise e Automa√ß√£o":
        excel_avancado()
        quiz_avancado()
    elif modulo_selecionado == "üí° Dicas de Produtividade e Boas Pr√°ticas":
        dicas_produtividade() # Nova fun√ß√£o
        quiz_dicas_produtividade()
    elif modulo_selecionado == "üöÄ Desvendando o Power Query":
        power_query_modulo() # Nova fun√ß√£o
        quiz_power_query()
    elif modulo_selecionado == "üèÜ Projeto Final: Dashboard Interativo":
        projeto_final()

# --- M√≥dulos de Conte√∫do ---

def introducao_excel():
    st.header("1. üëã In√≠cio R√°pido e Interface do Excel")
    st.write("Vamos come√ßar do b√°sico, entendendo como o Excel funciona e como voc√™ pode interagir com ele de forma eficiente.")

    st.subheader("1.1. O que √© o Excel e Por que Us√°-lo?")
    st.markdown("""
    O **Excel** √© muito mais que uma simples tabela. √â uma **ferramenta de planilha eletr√¥nica** da Microsoft, indispens√°vel para:
    * **Organiza√ß√£o de Dados**: Listas, cadastros, invent√°rios.
    * **C√°lculos e An√°lises Num√©ricas**: Or√ßamentos, finan√ßas, estat√≠sticas.
    * **Visualiza√ß√£o de Dados**: Gr√°ficos e dashboards.
    * **Automa√ß√£o de Tarefas**: Com f√≥rmulas complexas, Power Query e VBA.

    √â o cora√ß√£o de muitas opera√ß√µes empresariais e uma habilidade valorizada em qualquer carreira.
    """)

    st.subheader("1.2. Conhecendo a Interface do Usu√°rio (UI)")
    st.write("A interface do Excel pode parecer complexa √† primeira vista, mas entender suas partes te dar√° confian√ßa.")
    st.info("""
    * **Faixa de Op√ß√µes (Ribbon)**: A "central de comando" do Excel. Ela √© dividida em guias (P√°gina Inicial, Inserir, Desenvolvedor, etc.), e cada guia tem grupos de ferramentas.
    * **Barra de F√≥rmulas**: Fica logo acima das colunas. √â aqui que voc√™ v√™ e edita o conte√∫do da c√©lula selecionada, seja texto, n√∫mero ou uma f√≥rmula.
    * **C√©lulas, Linhas e Colunas**: A malha principal da planilha.
        * **C√©lula**: A menor unidade, intersec√ß√£o de uma linha e uma coluna (ex: `A1`, `C5`). Cada c√©lula tem um **endere√ßo √∫nico**.
        * **Linhas**: Numeradas (1, 2, 3...).
        * **Colunas**: Nomeadas por letras (A, B, C...).
    * **Planilhas (Sheets)**: Cada arquivo Excel (Pasta de Trabalho) pode ter v√°rias planilhas. Voc√™ as v√™ nas abas na parte inferior.
    * **Barra de Status**: Na parte inferior, mostra informa√ß√µes √∫teis (m√©dia, soma, contagem) das c√©lulas selecionadas.
    """)
    st.markdown("---")

    st.subheader("1.3. Inserindo, Selecionando e Formatando Dados")
    st.write("A base de tudo √© saber como colocar e apresentar seus dados.")
    st.markdown("""
    * **Inserir Dados**: Clique em uma c√©lula e digite. Pressione `Enter` para ir para a c√©lula de baixo, `Tab` para ir para a direita.
    * **Selecionar C√©lulas/Intervalos**:
        * Clique e arraste para selecionar um intervalo.
        * `Ctrl + A`: Seleciona tudo.
        * `Ctrl + Shift + Seta`: Seleciona at√© o fim dos dados em uma dire√ß√£o.
        * `Ctrl + Espa√ßo`: Seleciona a coluna inteira.
        * `Shift + Espa√ßo`: Seleciona a linha inteira.
    * **Formatar Dados**: Mude a apar√™ncia para legibilidade e clareza. Use as op√ß√µes na guia **P√°gina Inicial**: Negrito, It√°lico, Cores de Preenchimento/Fonte, Bordas, Formatos Num√©ricos (Moeda, Porcentagem, Data, etc.).
    """)

    st.subheader("Exerc√≠cio 1: Familiarizando-se com a Interface")
    st.write("Abra uma nova pasta de trabalho no Excel e siga os passos:")
    st.markdown("""
    1.  Na c√©lula **A1**, digite `Lista de Compras`. Deixe em **negrito** e **centralize** no intervalo A1:C1.
    2.  Nas c√©lulas **A2**, **B2** e **C2**, digite `Item`, `Quantidade` e `Pre√ßo Unit√°rio`, respectivamente. Coloque-os em **negrito** e **alinhe √† esquerda**.
    3.  Preencha 3 linhas com itens, quantidades e pre√ßos (ex: `Ma√ß√£`, `5`, `3.50`).
    4.  Formate a coluna `Pre√ßo Unit√°rio` para **Moeda (R$)**.
    5.  Altere a cor de preenchimento da c√©lula `A1` para um **azul claro**.
    6.  **Renomeie** a Planilha1 para `Minhas Compras`.
    """)
    st.markdown("---")

def excel_basico():
    st.header("2. üî¢ Excel B√°sico: C√°lculos e L√≥gica")
    st.write("Aqui voc√™ vai desvendar o poder das f√≥rmulas e fun√ß√µes essenciais para realizar c√°lculos e tomar decis√µes simples nos seus dados.")

    st.subheader("2.1. O Poder das F√≥rmulas e Refer√™ncias")
    st.markdown("""
    Uma **f√≥rmula** no Excel sempre come√ßa com um sinal de igual (`=`). Elas realizam c√°lculos ou a√ß√µes.
    * **Operadores Aritm√©ticos**: `+` (soma), `-` (subtra√ß√£o), `*` (multiplica√ß√£o), `/` (divis√£o), `^` (pot√™ncia).
        * Ex: `=10*5` (resultado 50)
    * **Refer√™ncias de C√©lula**: Em vez de n√∫meros fixos, use endere√ßos de c√©lulas. Isso torna suas f√≥rmulas din√¢micas!
        * Ex: Se `A1` tem 10 e `B1` tem 5, `=A1*B1` (resultado 50). Se voc√™ mudar `A1` para 20, a f√≥rmula se atualiza para 100 automaticamente.

    #### Tipos de Refer√™ncias
    * **Relativas (A1)**: Mudam quando a f√≥rmula √© copiada. Padr√£o.
    * **Absolutas ($A$1)**: Permanecem fixas quando a f√≥rmula √© copiada. Use `F4` para alternar ao digitar a f√≥rmula. Ideal para valores fixos (taxas, constantes).
    * **Mistas (A$1 ou $A1)**: Fixa apenas a linha ou a coluna.
    """)

    st.subheader("2.2. Fun√ß√µes Essenciais: SOMA, M√âDIA, M√çNIMO, M√ÅXIMO, CONT.N√öM, CONT.VALORES")
    st.write("As fun√ß√µes s√£o f√≥rmulas pr√©-definidas que simplificam c√°lculos complexos.")
    st.markdown("""
    * **SOMA**: Soma os valores de um intervalo.
        * **Sintaxe**: `=SOMA(intervalo)` ou `=SOMA(n√∫mero1; [n√∫mero2]; ...)`
        * **Exemplo**: `=SOMA(A1:A5)`
    * **M√âDIA**: Calcula a m√©dia aritm√©tica.
        * **Sintaxe**: `=M√âDIA(intervalo)`
        * **Exemplo**: `=M√âDIA(B2:B10)`
    * **M√çNIMO / M√ÅXIMO**: Encontra o menor/maior valor.
        * **Sintaxe**: `=M√çNIMO(intervalo)`, `=M√ÅXIMO(intervalo)`
    * **CONT.N√öM**: Conta c√©lulas que cont√™m **n√∫meros**.
        * **Sintaxe**: `=CONT.N√öM(intervalo)`
    * **CONT.VALORES**: Conta c√©lulas que **n√£o est√£o vazias** (n√∫meros, texto, erros).
        * **Sintaxe**: `=CONT.VALORES(intervalo)`
    """)

    st.subheader("2.3. Fun√ß√£o SE (IF): Tomada de Decis√£o")
    st.write("A fun√ß√£o `SE` √© a base da l√≥gica condicional no Excel. Ela permite que sua planilha 'tome decis√µes'.")
    st.markdown("""
    * **Sintaxe**: `=SE(teste_l√≥gico; valor_se_verdadeiro; valor_se_falso)`
        * **`teste_l√≥gico`**: Uma pergunta que resulta em VERDADEIRO ou FALSO (ex: `A1>100`, `B2="Ativo"`).
        * **`valor_se_verdadeiro`**: O que o Excel faz se o teste l√≥gico for VERDADEIRO.
        * **`valor_se_falso`**: O que o Excel faz se o teste l√≥gico for FALSO.
    """)
    st.subheader("Exemplo Pr√°tico: Status de Vendas")
    st.code("""
    | Vendedor | Vendas (B) | Meta (C) | Status (D) |
    |---|---|---|---|
    | Ana      | 12000      | 10000    |            |
    | Pedro    | 8000       | 10000    |            |
    """)
    st.write("Na c√©lula **D2**, para verificar se a Ana atingiu a meta:")
    st.code(f"=SE(B2>=C2; 'Meta Atingida'; 'Abaixo da Meta')")
    st.write("Se arrastar para baixo, a refer√™ncia `B2` e `C2` se tornar√° `B3` e `C3` automaticamente (refer√™ncia relativa).")
    st.markdown("---")

    st.subheader("Exerc√≠cio 2: Aplicando Fun√ß√µes Essenciais e L√≥gica")
    st.write("Crie a seguinte tabela no Excel:")
    st.code("""
    | Produto   | Quantidade Vendida | Pre√ßo Unit√°rio |
    |-----------|--------------------|----------------|
    | Caneta    | 15                 | 2.50           |
    | Caderno   | 8                  | 12.00          |
    | L√°pis     | 25                 | 1.50           |
    | Borracha  | 10                 | 0.75           |
    | Total     |                    |                |
    | M√©dia     |                    |                |
    | Maior Venda|                    |                |
    """)
    st.markdown("""
    1.  Na coluna D (Vendas Totais), calcule o **`Valor Total`** para cada produto (`Quantidade Vendida * Pre√ßo Unit√°rio`).
    2.  Na linha "Total", use a fun√ß√£o **`SOMA`** para obter o total geral de `Quantidade Vendida` e `Vendas Totais`.
    3.  Na linha "M√©dia", use a fun√ß√£o **`M√âDIA`** para calcular a m√©dia de `Quantidade Vendida` e `Vendas Totais`.
    4.  Na linha "Maior Venda", use a fun√ß√£o **`M√ÅXIMO`** para encontrar a maior `Vendas Totais`.
    5.  Adicione uma coluna E chamada "Desempenho". Use a fun√ß√£o **`SE`** para classificar cada produto: se as `Vendas Totais` forem maiores que 50, o "Desempenho" ser√° "Bom", caso contr√°rio, "Regular".
    """)

    # Valida√ß√£o do exerc√≠cio (simplificada)
    with st.expander("Verificar Respostas (Sugest√£o de F√≥rmulas)"):
        st.markdown("""
        * **Valor Total (D2)**: `=B2*C2` (e arraste para baixo)
        * **Total Quantidade Vendida (B6)**: `=SOMA(B2:B5)`
        * **Total Vendas Totais (D6)**: `=SOMA(D2:D5)`
        * **M√©dia Quantidade Vendida (B7)**: `=M√âDIA(B2:B5)`
        * **M√©dia Vendas Totais (D7)**: `=M√âDIA(D2:D5)`
        * **Maior Venda (D8)**: `=M√ÅXIMO(D2:D5)`
        * **Desempenho (E2)**: `=SE(D2>50; 'Bom'; 'Regular')` (e arraste para baixo)
        """)
    st.markdown("---")


def quiz_introducao():
    st.header("‚ùì Quiz: In√≠cio R√°pido e Interface")
    st.write("Teste seus conhecimentos sobre os conceitos b√°sicos do Excel!")

    st.subheader("Pergunta 1")
    q1_options = ["Faixa de F√≥rmulas", "Barra de F√≥rmulas", "√Årea de Trabalho", "Ribbon Principal"]
    q1_answer = st.radio("Qual √© o nome da barra que mostra o conte√∫do da c√©lula selecionada e permite editar f√≥rmulas?", q1_options, key="q1_intro")
    if st.button("Verificar Pergunta 1", key="btn_q1_intro"):
        if q1_answer == "Barra de F√≥rmulas":
            st.success("Correto! üéâ A Barra de F√≥rmulas √© onde voc√™ v√™ e edita o conte√∫do das c√©lulas.")
        else:
            st.error("Ops! Tente novamente. Lembre-se de onde voc√™ digita e edita as f√≥rmulas.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["Um arquivo com v√°rias pastas", "Uma intersec√ß√£o de uma linha e uma coluna", "Um gr√°fico complexo", "Uma fun√ß√£o de c√°lculo"]
    q2_answer = st.radio("No Excel, o que representa uma 'C√©lula'?", q2_options, key="q2_intro")
    if st.button("Verificar Pergunta 2", key="btn_q2_intro"):
        if q2_answer == "Uma intersec√ß√£o de uma linha e uma coluna":
            st.success("Correto! Uma c√©lula √© a unidade b√°sica para inserir dados no Excel.")
        else:
            st.error("Incorreto. Pense em como os dados s√£o organizados em uma grade.")
    st.markdown("---")


def quiz_basico():
    st.header("‚ùì Quiz: Excel B√°sico")
    st.write("Verifique sua compreens√£o das fun√ß√µes essenciais!")

    st.subheader("Pergunta 1")
    q1_options = ["`=MEDIA(A1; A5)`", "`=MEDIANA(A1:A5)`", "`=M√âDIA(A1:A5)`", "`=AVERAGE(A1-A5)`"]
    q1_answer = st.radio("Qual f√≥rmula calcularia a m√©dia dos valores nas c√©lulas A1, A2, A3, A4 e A5?", q1_options, key="q1_basico")
    if st.button("Verificar Pergunta 1", key="btn_q1_basico"):
        if q1_answer == "`=M√âDIA(A1:A5)`":
            st.success("Correto! üéâ A fun√ß√£o M√âDIA com o intervalo correto.")
        else:
            st.error("Incorreto. Revise a sintaxe da fun√ß√£o M√âDIA.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["`=SE(A1>10; 'Alto')`", "`=SE(A1>10; 'Alto'; 'Baixo')`", "`=SE(A1;'Alto';'Baixo')`", "`=SE(A1>10, 'Alto', 'Baixo')`"]
    q2_answer = st.radio("Voc√™ quer classificar um n√∫mero na c√©lula A1 como 'Alto' se for maior que 10, e 'Baixo' caso contr√°rio. Qual a f√≥rmula correta?", q2_options, key="q2_basico")
    if st.button("Verificar Pergunta 2", key="btn_q2_basico"):
        if q2_answer == "`=SE(A1>10; 'Alto'; 'Baixo')`":
            st.success("Correto! üéâ Voc√™ usou a sintaxe completa da fun√ß√£o SE.")
        else:
            st.error("Ops! A fun√ß√£o SE precisa de tr√™s argumentos: teste l√≥gico, valor se verdadeiro e valor se falso.")
    st.markdown("---")


def excel_intermediario():
    st.header("3. üîç Excel Intermedi√°rio: Buscas e Condi√ß√µes M√∫ltiplas")
    st.write("Agora, vamos avan√ßar para fun√ß√µes que permitem buscar informa√ß√µes em grandes bases de dados e aplicar l√≥gica com m√∫ltiplos crit√©rios. Essencial para an√°lises mais complexas!")

    st.subheader("3.1. Fun√ß√µes de Busca: PROCV (VLOOKUP) e PROCH (HLOOKUP)")
    st.write("Estas fun√ß√µes s√£o o cora√ß√£o da integra√ß√£o de dados em planilhas diferentes ou dentro da mesma planilha. Elas buscam um valor e retornam outro relacionado.")
    st.markdown("""
    * **PROCV (VLOOKUP)**: Procura um valor na **primeira coluna** de um intervalo e retorna um valor correspondente de outra coluna na **mesma linha**. (O 'V' √© de Vertical).
        * **Sintaxe**: `=PROCV(valor_procurado; matriz_tabela; n√∫m_√≠ndice_coluna; [intervalo_pesquisa])`
            * **`valor_procurado`**: O que voc√™ quer procurar (ex: um ID de produto).
            * **`matriz_tabela`**: O intervalo de c√©lulas onde o Excel vai procurar. **A primeira coluna deste intervalo DEVE conter o `valor_procurado`.**
            * **`n√∫m_√≠ndice_coluna`**: O n√∫mero da coluna na `matriz_tabela` de onde voc√™ quer retornar o valor (ex: se o pre√ßo est√° na 3¬™ coluna, use `3`).
            * **`[intervalo_pesquisa]`**: `VERDADEIRO` (busca aproximada, padr√£o) ou `FALSO` (busca exata). **Use SEMPRE `FALSO` para resultados precisos.**
    * **PROCH (HLOOKUP)**: Similar ao PROCV, mas procura o valor na **primeira LINHA** de um intervalo. (O 'H' √© de Horizontal). Menos comum que o PROCV.
        * **Sintaxe**: `=PROCH(valor_procurado; matriz_tabela; n√∫m_√≠ndice_linha; [intervalo_pesquisa])`
    """)

    st.subheader("Exemplo Pr√°tico: Automatizando Pre√ßos de Pedidos")
    st.code("""
    **Tabela de Produtos (Aba: Produtos)**
    | ID Produto (A) | Nome Produto (B) | Pre√ßo (C) |
    |----------------|------------------|-----------|
    | P001           | Caneta           | 2.50      |
    | P002           | L√°pis            | 1.00      |
    | P003           | Caderno          | 15.00     |

    **Tabela de Pedidos (Aba: Pedidos)**
    | Pedido (A) | ID Produto (B) | Pre√ßo Unit√°rio (C) |
    |------------|----------------|--------------------|
    | 101        | P001           |                    |
    | 102        | P003           |                    |
    """)
    st.write("Na **Tabela de Pedidos**, para buscar o 'Pre√ßo Unit√°rio' a partir do 'ID Produto':")
    st.write(f"Na c√©lula **C2** (para o Pedido 101), supondo que a Tabela de Produtos esteja na 'Produtos'!A1:C4:")
    st.code(f"='=PROCV(B2; Produtos!$A$1:$C$4; 3; FALSO)'")
    st.write("Perceba o uso de `$` (refer√™ncia absoluta) na `matriz_tabela`. Isso √© crucial para que, ao arrastar a f√≥rmula, o intervalo de busca n√£o mude!")
    st.markdown("---")

    st.subheader("3.2. Fun√ß√µes Condicionais M√∫ltiplas: SOMASES (SUMIFS) e CONT.SES (COUNTIFS)")
    st.write("Enquanto `SOMASE` e `CONT.SE` usam um √∫nico crit√©rio, as vers√µes com 'ES' permitem combinar **v√°rios crit√©rios** para somar ou contar.")
    st.markdown("""
    * **SOMASES (SUMIFS)**: Soma c√©lulas que satisfazem **todos** os crit√©rios especificados.
        * **Sintaxe**: `=SOMASES(intervalo_soma; intervalo_crit√©rio1; crit√©rio1; [intervalo_crit√©rio2; crit√©rio2]; ...)`
        * **Aten√ß√£o!** Diferente do `SOMASE`, o `intervalo_soma` √© o **primeiro argumento**.
        * **Exemplo**: Somar vendas do vendedor 'Carlos' na regi√£o 'Sudeste' com valor maior que 500.
    * **CONT.SES (COUNTIFS)**: Conta o n√∫mero de c√©lulas que satisfazem **todos** os crit√©rios especificados.
        * **Sintaxe**: `=CONT.SES(intervalo_crit√©rio1; crit√©rio1; [intervalo_crit√©rio2; crit√©rio2]; ...)`
        * **Exemplo**: Contar quantos pedidos foram feitos por 'Jo√£o' em '2024' e com status 'Conclu√≠do'.
    """)
    st.subheader("Exemplo Pr√°tico: An√°lise de Pedidos Detalhada")
    st.code("""
    | Vendedor | M√™s      | Regi√£o  | Valor da Venda |
    |----------|----------|---------|----------------|
    | Carlos   | Janeiro  | Sul     | 1000           |
    | Ana      | Fevereiro| Norte   | 1500           |
    | Carlos   | Fevereiro| Sul     | 800            |
    | Maria    | Janeiro  | Norte   | 2000           |
    """)
    st.write("Para somar as vendas do 'Carlos' na 'Regi√£o Sul':")
    st.code(f"='=SOMASES(D2:D5; A2:A5; \"Carlos\"; C2:C5; \"Sul\")'")
    st.write(f"Resultado: **1800** (1000 de Janeiro + 800 de Fevereiro).")
    st.markdown("---")

    st.subheader("Exerc√≠cio 3: An√°lise de Pedidos com M√∫ltiplos Crit√©rios")
    st.write("Considere as duas tabelas abaixo no Excel (idealmente em planilhas separadas: 'Clientes' e 'Pedidos'):")
    st.code("""
    **Tabela 1: Clientes (Aba: Clientes)**
    | ID Cliente | Nome Cliente | Cidade     |
    |------------|--------------|------------|
    | C001       | Jo√£o Silva   | S√£o Paulo  |
    | C002       | Maria Souza  | Rio de Janeiro |
    | C003       | Ana Lima     | S√£o Paulo  |
    | C004       | Pedro Santos | Belo Horizonte |

    **Tabela 2: Pedidos (Aba: Pedidos)**
    | ID Pedido | ID Cliente | Data Pedido | Valor Pedido | Status     |
    |-----------|------------|-------------|--------------|------------|
    | P101      | C001       | 05/01/2024  | 250.00       | Entregue   |
    | P102      | C003       | 15/01/2024  | 150.00       | Pendente   |
    | P103      | C001       | 20/02/2024  | 300.00       | Entregue   |
    | P104      | C002       | 01/03/2024  | 500.00       | Entregue   |
    | P105      | C004       | 10/03/2024  | 200.00       | Pendente   |
    | P106      | C003       | 25/03/2024  | 100.00       | Entregue   |
    """)
    st.markdown("""
    1.  Na Tabela 2 (Pedidos), adicione uma coluna `F` chamada "**Nome Cliente**". Use **`PROCV`** para trazer o nome do cliente da Tabela 1 com base no `ID Cliente`.
    2.  Adicione uma coluna `G` chamada "**Cidade Cliente**" na Tabela 2. Use **`PROCV`** novamente para trazer a cidade do cliente da Tabela 1.
    3.  Calcule o **valor total de pedidos** feitos por clientes de "**S√£o Paulo**" com status "**Entregue**".
    4.  Conte quantos pedidos foram feitos por "**Jo√£o Silva**" com status "**Pendente**" OU com `Valor Pedido` superior a 200. (Dica: Pense em como voc√™ combinaria `CONT.SES` ou usaria `SE` aninhado com `OU`).
    5.  Qual o **valor m√©dio** dos pedidos realizados em **Mar√ßo de 2024**?
    """)
    with st.expander("Verificar Respostas (Sugest√£o de F√≥rmulas)"):
        st.markdown("""
        * **Nome Cliente (F2 na aba Pedidos)**: `=PROCV(B2; Clientes!$A$2:$C$5; 2; FALSO)`
        * **Cidade Cliente (G2 na aba Pedidos)**: `=PROCV(B2; Clientes!$A$2:$C$5; 3; FALSO)`
        * **Valor Total SP Entregue**: `=SOMASES(D2:D7; G2:G7; "S√£o Paulo"; E2:E7; "Entregue")`
        * **Pedidos Jo√£o Pendente ou >200**: Poderia ser `=CONT.SES(F2:F7; "Jo√£o Silva"; E2:E7; "Pendente") + CONT.SES(F2:F7; "Jo√£o Silva"; D2:D7; ">200")` (contando duplicidade) ou uma abordagem mais complexa com `MATRIZPROD` ou coluna auxiliar com `SE(E2="Pendente";OU(E2="Pendente";D2>200);...)`. Para simplificar, o `CONT.SES` direto √© o mais esperado.
        * **Valor M√©dio Mar√ßo 2024**: `=M√âDIASES(D2:D7; C2:C7; ">=01/03/2024"; C2:C7; "<=31/03/2024")`
        """)
    st.markdown("---")


def quiz_intermediario():
    st.header("‚ùì Quiz: Excel Intermedi√°rio")
    st.write("Verifique seu dom√≠nio das fun√ß√µes de busca e condicionais m√∫ltiplas!")

    st.subheader("Pergunta 1")
    q1_options = ["`=PROCV(B1; A1:C10; 2; VERDADEIRO)`", "`=PROCV(B1; A1:C10; 2; FALSO)`", "`=PROCH(B1; A1:C10; 2; FALSO)`", "`=PROCV(A1:C10; B1; 2; FALSO)`"]
    q1_answer = st.radio("Voc√™ tem um ID de produto na c√©lula B1 e quer encontrar o nome desse produto que est√° na segunda coluna de uma tabela em A1:C10. Qual a f√≥rmula PROCV correta para uma busca exata?", q1_options, key="q1_intermediario")
    if st.button("Verificar Pergunta 1", key="btn_q1_intermediario"):
        if q1_answer == "`=PROCV(B1; A1:C10; 2; FALSO)`":
            st.success("Correto! üéâ O `FALSO` √© crucial para busca exata.")
        else:
            st.error("Ops! Lembre-se da ordem dos argumentos no PROCV e da import√¢ncia do √∫ltimo argumento para busca exata.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["`=SOMA(D1:D10; A1:A10; 'Vendas'; B1:B10; '2024')`", "`=SOMASES(D1:D10; A1:A10; 'Vendas'; B1:B10; '2024')`", "`=SOMASE(D1:D10; 'Vendas', '2024')`", "`=CONT.SES(D1:D10; A1:A10; 'Vendas'; B1:B10; '2024')`"]
    q2_answer = st.radio("Qual f√≥rmula usaria para somar o 'Valor Total' (coluna D) de vendas do 'Departamento' (coluna A) 'Vendas' no 'Ano' (coluna B) '2024'?", q2_options, key="q2_intermediario")
    if st.button("Verificar Pergunta 2", key="btn_q2_intermediario"):
        if q2_answer == "`=SOMASES(D1:D10; A1:A10; 'Vendas'; B1:B10; '2024')`":
            st.success("Correto! üéâ SOMASES √© a fun√ß√£o para m√∫ltiplos crit√©rios, e a coluna de soma vem primeiro.")
        else:
            st.error("Incorreto. A fun√ß√£o SOMASES √© para m√∫ltiplos crit√©rios e tem uma ordem espec√≠fica de argumentos.")
    st.markdown("---")

def excel_avancado():
    st.header("4. üìä Excel Avan√ßado: An√°lise e Automa√ß√£o")
    st.write("Bem-vindo ao n√≠vel onde o Excel se torna uma ferramenta de intelig√™ncia de neg√≥cios. Aqui, voc√™ aprender√° a resumir grandes volumes de dados, criar visualiza√ß√µes din√¢micas e otimizar tarefas.")

    st.subheader("4.1. Tabelas Din√¢micas (Pivot Tables): O Resumidor M√°gico")
    st.write("As **Tabelas Din√¢micas** s√£o uma das funcionalidades mais poderosas do Excel. Elas transformam bases de dados gigantes em resumos concisos e interativos, permitindo analisar dados de v√°rias perspectivas.")
    st.markdown("""
    **Para que servem?**
    * **Resumir**: Agrupar dados por categorias (ex: vendas por produto, total de funcion√°rios por departamento).
    * **Analisar**: Encontrar padr√µes, tend√™ncias e exce√ß√µes.
    * **Explorar**: Reorganizar os dados rapidamente com um "arrasta e solta".
    * **Apresentar**: Criar relat√≥rios e dashboards.

    **Como Criar (Passos Essenciais):**
    1.  Selecione sua base de dados completa (incluindo cabe√ßalhos).
    2.  V√° na guia **Inserir** > **Tabela Din√¢mica**.
    3.  Escolha onde quer colocar a Tabela Din√¢mica (geralmente em uma Nova Planilha). Clique em OK.
    4.  No painel **Campos da Tabela Din√¢mica** (√† direita), arraste os campos para as √°reas:
        * **Linhas**: Categorias que voc√™ quer ver nas linhas do seu resumo (ex: `Vendedor`, `M√™s`).
        * **Colunas**: Categorias que voc√™ quer ver nas colunas (menos comum, mas √∫til para compara√ß√µes r√°pidas, ex: `Ano`).
        * **Valores**: Os campos num√©ricos que voc√™ quer somar, contar, obter a m√©dia, etc. (ex: `Valor Venda`, `Quantidade`). Por padr√£o, ele soma, mas voc√™ pode mudar para Contagem, M√©dia, M√°ximo, M√≠nimo, etc. clicando na setinha ao lado do campo na √°rea de Valores.
        * **Filtros**: Permitem filtrar todo o relat√≥rio din√¢mico por um ou mais campos (ex: `Regi√£o`, `Status`).

    **Dica**: Use o bot√£o direito do mouse sobre os campos na √°rea de "Valores" para escolher o tipo de c√°lculo (Soma, Contagem, M√©dia, etc.).
    """)

    st.subheader("Exemplo: Analisando Vendas por Regi√£o e Categoria")
    st.code("""
    | Regi√£o  | Categoria | Vendedor | Valor Venda | Data Venda |
    |---------|-----------|----------|-------------|------------|
    | Sudeste | Eletr√¥nicos| Ana      | 1500        | 01/01/2024 |
    | Sul     | Livros    | Pedro    | 500         | 05/01/2024 |
    | Sudeste | Livros    | Ana      | 800         | 10/01/2024 |
    | Norte   | Eletr√¥nicos| Carlos   | 2500        | 15/01/2024 |
    """)
    st.write("""
    Para ver o total de vendas por **Regi√£o** e **Categoria**:
    * Arraste **Regi√£o** para `Linhas`.
    * Arraste **Categoria** para `Colunas`.
    * Arraste **Valor Venda** para `Valores`.

    Isso vai te dar um resumo cruzado das vendas. Experimente arrastar **Vendedor** para `Filtros` para ver as vendas de um vendedor espec√≠fico!
    """)
    st.markdown("---")

    st.subheader("4.2. Gr√°ficos Din√¢micos e Dashboards: Visualizando seus Dados")
    st.write("Um **Gr√°fico Din√¢mico** √© um gr√°fico interativo que est√° diretamente conectado a uma Tabela Din√¢mica. Ele se atualiza automaticamente quando voc√™ filtra ou altera sua Tabela Din√¢mica.")
    st.markdown("""
    **Como Criar:**
    1.  Selecione **qualquer c√©lula** dentro da sua Tabela Din√¢mica.
    2.  V√° na guia **Analisar Tabela Din√¢mica** > **Gr√°fico Din√¢mico**.
    3.  Escolha o tipo de gr√°fico (colunas, barras, pizza, linha, etc.) e clique em OK.

    **Dashboards (Pain√©is de Controle):**
    Um dashboard √© uma cole√ß√£o de gr√°ficos, tabelas e indicadores-chave de desempenho (KPIs) em uma √∫nica planilha, projetado para fornecer uma vis√£o r√°pida e completa de um conjunto de dados.
    * Use **Segmenta√ß√£o de Dados (Slicers)**: Bot√µes interativos que filtram Tabelas e Gr√°ficos Din√¢micos com um clique. V√° em **Analisar Tabela Din√¢mica** > **Inserir Segmenta√ß√£o de Dados**.
    * Use **Linhas do Tempo (Timelines)**: Para filtrar dados por per√≠odo de tempo. V√° em **Analisar Tabela Din√¢mica** > **Inserir Linha do Tempo**.

    Combine esses elementos para criar relat√≥rios visuais impressionantes e interativos!
    """)
    st.markdown("---")

    st.subheader("4.3. Fun√ß√µes Avan√ßadas de Busca: √çNDICE, CORRESP e DESLOC")
    st.write("Essas fun√ß√µes, especialmente `√çNDICE` com `CORRESP`, oferecem uma flexibilidade superior ao `PROCV` para cen√°rios complexos.")
    st.markdown("""
    * **√çNDICE (INDEX)**: Retorna o valor de uma c√©lula na intersec√ß√£o de uma linha e coluna espec√≠ficas dentro de um intervalo.
        * **Sintaxe**: `=√çNDICE(matriz; n√∫m_linha; [n√∫m_coluna])`
        * **Exemplo**: `=√çNDICE(A1:C10; 3; 2)` retorna o valor da c√©lula `B3`.
    * **CORRESP (MATCH)**: Retorna a **posi√ß√£o relativa** de um item em um intervalo (uma √∫nica linha ou coluna) que corresponde a um valor especificado.
        * **Sintaxe**: `=CORRESP(valor_procurado; matriz_procurada; [tipo_correspond√™ncia])`
        * **`tipo_correspond√™ncia`**: `0` para exata (mais comum), `1` para menor que, `-1` para maior que.
        * **Exemplo**: `=CORRESP("Ma√ß√£"; A1:A10; 0)` retorna `5` se "Ma√ß√£" estiver na 5¬™ posi√ß√£o do intervalo.
    * **√çNDICE + CORRESP**: A combina√ß√£o perfeita! Voc√™ usa `CORRESP` para descobrir a posi√ß√£o da linha e/ou coluna, e `√çNDICE` para buscar o valor nessa posi√ß√£o. Isso elimina a restri√ß√£o do `PROCV` de buscar apenas √† direita.
        * **Exemplo**: Para buscar o `Pre√ßo` de um `Produto` (`valor_procurado` na c√©lula `E1`) numa tabela onde `Produto` est√° na coluna `B` e `Pre√ßo` na coluna `D`:
            `=√çNDICE(D:D; CORRESP(E1; B:B; 0))`
            * `D:D`: √â a coluna de onde voc√™ quer o resultado (Pre√ßo).
            * `CORRESP(E1; B:B; 0)`: Encontra a linha onde o produto de `E1` est√° na coluna `B`.
    * **DESLOC (OFFSET)**: Retorna uma refer√™ncia a um intervalo que √© deslocado um n√∫mero especificado de linhas e colunas de uma refer√™ncia inicial.
        * **Sintaxe**: `=DESLOC(refer√™ncia; linhas; colunas; [altura]; [largura])`
        * **Uso Avan√ßado**: Pode criar intervalos din√¢micos, mas √© vol√°til (recalcula a cada mudan√ßa na planilha, pode deixar lento).

    **Quando usar √çNDICE/CORRESP vs PROCV?**
    * **PROCV**: Mais simples para buscas diretas (valor na 1¬™ coluna, resultado √† direita).
    * **√çNDICE/CORRESP**: Mais flex√≠vel. Pode buscar para a esquerda, para cima, ou em tabelas mais complexas. **√â a escolha profissional para buscas mais robustas.**
    """)
    st.markdown("---")

    st.subheader("Exerc√≠cio 4: Construindo uma Base de Dados e An√°lise Avan√ßada")
    st.write("Vamos criar uma base de dados mais complexa e aplicar as ferramentas avan√ßadas. Crie uma planilha chamada 'Dados Vendas' no Excel com as colunas:")
    st.code("""
    | ID Venda | Data | Vendedor | Regi√£o  | Produto | Categoria | Quantidade | Pre√ßo Unit√°rio |
    |----------|------|----------|---------|---------|-----------|------------|----------------|
    | V001     | 01/01/2024 | Ana      | Sudeste | Caneta  | Papelaria | 10         | 2.50           |
    | V002     | 02/01/2024 | Pedro    | Sul     | Caderno | Papelaria | 5          | 12.00          |
    | V003     | 05/01/2024 | Ana      | Sudeste | Mouse   | Eletr√¥nicos| 2          | 50.00          |
    | V004     | 10/01/2024 | Carlos   | Norte   | Teclado | Eletr√¥nicos| 1          | 120.00         |
    | V005     | 15/01/2024 | Pedro    | Sul     | Borracha| Papelaria | 20         | 0.75           |
    | V006     | 20/01/2024 | Ana      | Sudeste | Monitor | Eletr√¥nicos| 1          | 350.00         |
    | V007     | 25/01/2024 | Carlos   | Norte   | Livro   | Livros    | 3          | 30.00          |
    """)
    st.markdown("""
    1.  **Coluna `Valor Total`**: Adicione uma coluna **`Valor Total`** (`Quantidade` * `Pre√ßo Unit√°rio`).
    2.  **Tabela Din√¢mica**: Crie uma **Tabela Din√¢mica** para resumir o `Valor Total` por `Regi√£o` e `Categoria`.
        * Coloque `Regi√£o` nas **Linhas**.
        * Coloque `Categoria` nas **Colunas**.
        * Coloque `Valor Total` nos **Valores** (como Soma).
    3.  **Gr√°fico Din√¢mico**: Crie um **Gr√°fico de Colunas Agrupadas** a partir da Tabela Din√¢mica.
    4.  **Segmenta√ß√£o de Dados**: Insira uma **Segmenta√ß√£o de Dados** para `Vendedor` e `Data` (use `Linha do Tempo` para a data). Conecte-as √† sua Tabela Din√¢mica.
    5.  **Combina√ß√£o √çNDICE/CORRESP**: Crie uma √°rea de "Pesquisa de Venda" em outra aba.
        * Na c√©lula `A1`, coloque `ID Venda para Pesquisa:`.
        * Na c√©lula `B1`, insira um ID de venda (ex: `V003`).
        * Na c√©lula `A2`, coloque `Produto:`.
        * Na c√©lula `B2`, use `√çNDICE` e `CORRESP` para trazer o `Produto` (coluna `E` da tabela `Dados Vendas`) com base no `ID Venda` (coluna `A` da tabela `Dados Vendas`).
        * Repita para trazer o `Vendedor` e o `Valor Total`.
    """)
    with st.expander("Verificar Respostas (Sugest√£o de F√≥rmulas)"):
        st.markdown("""
        * **Valor Total (I2 em 'Dados Vendas')**: `=G2*H2` (e arraste)
        * **Pesquisa de Produto (B2 em nova aba)**: `=√çNDICE('Dados Vendas'!E:E; CORRESP(B$1; 'Dados Vendas'!A:A; 0))`
        * **Pesquisa de Vendedor (B3 em nova aba)**: `=√çNDICE('Dados Vendas'!C:C; CORRESP(B$1; 'Dados Vendas'!A:A; 0))`
        * **Pesquisa de Valor Total (B4 em nova aba)**: `=√çNDICE('Dados Vendas'!I:I; CORRESP(B$1; 'Dados Vendas'!A:A; 0))`
        """)
    st.markdown("---")


def quiz_avancado():
    st.header("‚ùì Quiz: Excel Avan√ßado")
    st.write("Teste seus conhecimentos em ferramentas de an√°lise complexas!")

    st.subheader("Pergunta 1")
    q1_options = ["Serve apenas para somar dados.", "√â uma ferramenta para resumir, analisar e apresentar dados de forma interativa.", "Cria gr√°ficos est√°ticos.", "Organiza dados em linhas e colunas fixas."]
    q1_answer = st.radio("Qual a principal utilidade de uma Tabela Din√¢mica (Pivot Table)?", q1_options, key="q1_avancado")
    if st.button("Verificar Pergunta 1", key="btn_q1_avancado"):
        if q1_answer == "√â uma ferramenta para resumir, analisar e apresentar dados de forma interativa.":
            st.success("Correto! üéâ Tabelas Din√¢micas s√£o incrivelmente vers√°teis para an√°lise.")
        else:
            st.error("Incorreto. Lembre-se que as Tabelas Din√¢micas s√£o din√¢micas e interativas.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["`PROCV` e `PROCH` n√£o funcionam com busca exata.", "`√çNDICE` e `CORRESP` s√£o mais flex√≠veis, permitindo buscar em qualquer dire√ß√£o.", "`√çNDICE` e `CORRESP` s√£o mais lentas que `PROCV`.", "`PROCV` sempre retorna m√∫ltiplos valores."]
    q2_answer = st.radio("Qual a principal vantagem de usar a combina√ß√£o √çNDICE e CORRESP em vez de PROCV ou PROCH?", q2_options, key="q2_avancado")
    if st.button("Verificar Pergunta 2", key="btn_q2_avancado"):
        if q2_answer == "`√çNDICE` e `CORRESP` s√£o mais flex√≠veis, permitindo buscar em qualquer dire√ß√£o.":
            st.success("Correto! üéâ Essa combina√ß√£o √© mais poderosa por sua flexibilidade direcional.")
        else:
            st.error("Ops! Pense nas limita√ß√µes do PROCV/PROCH e como √çNDICE/CORRESP as superam.")
    st.markdown("---")


def dicas_produtividade():
    st.header("5. üí° Dicas de Produtividade e Boas Pr√°ticas")
    st.write("Neste m√≥dulo, voc√™ aprender√° t√©cnicas e ferramentas que far√£o voc√™ trabalhar mais r√°pido e criar planilhas mais robustas e profissionais.")

    st.subheader("5.1. Valida√ß√£o de Dados: Garantindo a Qualidade")
    st.write("A **Valida√ß√£o de Dados** √© uma ferramenta poderosa para controlar o que os usu√°rios podem digitar em uma c√©lula, prevenindo erros e garantindo a consist√™ncia dos seus dados.")
    st.markdown("""
    **Como Usar (Dados > Valida√ß√£o de Dados):**
    * **Qualquer Valor**: Permite qualquer entrada.
    * **N√∫mero Inteiro/Decimal**: Restringe a n√∫meros dentro de um intervalo.
    * **Lista**: Cria uma lista suspensa de op√ß√µes pr√©-definidas (a mais comum e √∫til!).
        * Ex: Para uma coluna 'Departamento', crie uma lista com "Vendas", "Marketing", "TI". Isso evita erros de digita√ß√£o.
    * **Data/Hora**: Restringe a datas ou horas dentro de um per√≠odo.
    * **Comprimento do Texto**: Limita o n√∫mero de caracteres.
    * **Personalizado**: Use uma f√≥rmula para definir regras complexas.
    * **Mensagem de Entrada**: Ajuda o usu√°rio a saber o que digitar.
    * **Alerta de Erro**: Mensagem que aparece se a entrada for inv√°lida (parar, aviso, informa√ß√µes).

    **Por que √© Importante?** Evita erros de digita√ß√£o, padroniza entradas, melhora a integridade dos dados para an√°lises futuras.
    """)
    st.markdown("---")

    st.subheader("5.2. Formata√ß√£o Condicional: Destaque Inteligente")
    st.write("A **Formata√ß√£o Condicional** n√£o √© apenas est√©tica; √© uma ferramenta de an√°lise visual. Ela aplica formatos espec√≠ficos (cores, fontes, √≠cones) a c√©lulas que atendem a crit√©rios que voc√™ define, destacando padr√µes, tend√™ncias e exce√ß√µes instantaneamente.")
    st.markdown("""
    **Principais Usos (P√°gina Inicial > Formata√ß√£o Condicional):**
    * **Real√ßar Regras das C√©lulas**: Maior que, Menor que, Entre, Igual a, Texto que Cont√©m, Data Ocorrendo, Valores Duplicados.
    * **Regras de Primeiros/√öltimos**: Top 10 itens/%, √öltimos 10 itens/%.
    * **Barras de Dados**: Visualiza o valor da c√©lula em rela√ß√£o a outras com uma barra colorida.
    * **Escalas de Cores**: Aplica um gradiente de cores com base nos valores (ex: verde para alto, vermelho para baixo).
    * **Conjuntos de √çcones**: Adiciona √≠cones (setas, sem√°foros) para indicar tend√™ncias ou estados.

    **Exemplo**: Destacar em verde vendas acima da meta e em vermelho as abaixo.
    """)
    st.markdown("---")

    st.subheader("5.3. Fun√ß√µes de Texto: Manipulando Strings")
    st.write("Trabalhar com dados de texto √© comum, e o Excel tem fun√ß√µes poderosas para limpar, extrair e manipular strings.")
    st.markdown("""
    * **CONCATENAR / CONCAT / &**: Une textos de diferentes c√©lulas.
        * `=CONCATENAR(A1; " - "; B1)` ou `=A1 & " - " & B1`
    * **ESQUERDA / DIREITA / EXT.TEXTO**: Extrai parte de um texto.
        * `=ESQUERDA(A1; 3)` (os 3 primeiros caracteres)
        * `=DIREITA(A1; 4)` (os 4 √∫ltimos caracteres)
        * `=EXT.TEXTO(A1; 5; 2)` (2 caracteres a partir da posi√ß√£o 5)
    * **LOCALIZAR / PROCURAR**: Encontra a posi√ß√£o de um texto dentro de outro. `PROCURAR` n√£o diferencia mai√∫sculas/min√∫sculas.
        * `=LOCALIZAR(" "; A1)` (encontra a posi√ß√£o do primeiro espa√ßo)
    * **ARRUMAR**: Remove espa√ßos extras (m√∫ltiplos espa√ßos entre palavras, espa√ßos no in√≠cio/fim). Essencial para limpeza de dados!
        * `=ARRUMAR(A1)`
    * **MAI√öSCULA / MIN√öSCULA / PRI.MAI√öSCULA**: Altera a caixa do texto.
        * `=MAI√öSCULA(A1)` (TODO EM MAI√öSCULAS)
        * `=MIN√öSCULA(A1)` (todo em min√∫sculas)
        * `=PRI.MAI√öSCULA(A1)` (Primeira Letra De Cada Palavra Em Mai√∫scula)
    """)
    st.markdown("---")

    st.subheader("5.4. Fun√ß√µes de Data e Hora: An√°lise Temporal")
    st.write("Datas e horas s√£o tipos de dados cruciais. Entender como manipul√°-las abre portas para an√°lises temporais.")
    st.markdown("""
    * **HOJE() / AGORA()**: Retornam a data atual e a data/hora atual, respectivamente.
        * `=HOJE()`
        * `=AGORA()`
    * **DIA / M√äS / ANO**: Extraem partes de uma data.
        * `=DIA(A1)`, `=M√äS(A1)`, `=ANO(A1)`
    * **DATA / HORA**: Criam uma data ou hora a partir de seus componentes.
        * `=DATA(2024; 7; 11)`
    * **DATADIF**: Calcula a diferen√ßa entre duas datas.
        * `=DATADIF(data_inicial; data_final; "unidade")`
        * **Unidades**: `"y"` (anos), `"m"` (meses), `"d"` (dias), `"ym"` (meses desconsiderando anos), etc.
    * **DIA.DA.SEMANA**: Retorna o dia da semana (1-7).
        * `=DIA.DA.SEMANA(A1; 2)` (2 faz a semana come√ßar na segunda-feira = 1)
    * **DIATRABALHO.INTL**: Calcula a data ap√≥s um n√∫mero de dias √∫teis, especificando feriados e dias de fim de semana.
        * Muito √∫til para cronogramas.
    """)
    st.markdown("---")

    st.subheader("5.5. Atalhos de Teclado e Dicas de Produtividade")
    st.markdown("""
    * `Ctrl + C / Ctrl + V`: Copiar / Colar
    * `Ctrl + Z / Ctrl + Y`: Desfazer / Refazer
    * `Ctrl + S`: Salvar
    * `Ctrl + B`: Negrito
    * `Ctrl + 1`: Abrir Formatar C√©lulas
    * `Ctrl + Setas`: Navegar rapidamente para o fim/in√≠cio de um bloco de dados.
    * `Ctrl + Shift + Setas`: Selecionar rapidamente blocos de dados.
    * `F2`: Entrar em modo de edi√ß√£o de c√©lula.
    * `F4`: Alternar refer√™ncias de c√©lula (A1, $A$1, A$1, $A1$) ao digitar a f√≥rmula.
    * **Preenchimento Rel√¢mpago (Flash Fill)**: Comece a digitar um padr√£o (ex: separar nome e sobrenome), e o Excel pode preencher automaticamente o resto da coluna. (Dados > Preenchimento Rel√¢mpago ou `Ctrl + E`).
    * **Textos para Colunas**: Separe dados em uma c√©lula em v√°rias colunas (Dados > Textos para Colunas). √ìtimo para dados importados.
    """)
    st.markdown("---")

    st.subheader("Exerc√≠cio 5: Limpeza e An√°lise com Fun√ß√µes Avan√ßadas")
    st.write("Considere a seguinte tabela de RH no Excel. Digite-a exatamente como est√°:")
    st.code("""
    | ID Func.  | Nome Completo Original | Data Nasc.  | Contato               | Sal√°rio | Departamento  |
    |-----------|------------------------|-------------|-----------------------|---------|---------------|
    | F001      |  joao silva            | 15/07/1990  | joao.s@email.com      | 4500    |   Vendas      |
    | F002      | MARIA.COSTA            | 22/02/1985  | (11) 98765-4321       | 6000    |   marketing   |
    | F003      | Pedro G. LIMA          | 03/09/1992  | pedroglima@email.com  | 3800    |  TI           |
    | F004      |   ANA_ROCHA            | 28/04/1998  | anaroch@email.com     | 5200    |  vendas       |
    """)
    st.markdown("""
    1.  **Limpeza de Nomes**: Crie uma coluna "Nome Limpo". Use `ARRUMAR` e `PRI.MAI√öSCULA` para corrigir o "Nome Completo Original".
        * Dica: Para `ANA_ROCHA`, pode ser preciso usar `SUBSTITUIR("_"; " ")` antes de `PRI.MAI√öSCULA`.
    2.  **Valida√ß√£o de Dados**:
        * Na coluna "Sal√°rio", aplique uma **Valida√ß√£o de Dados** para permitir apenas valores entre `1000` e `10000`.
        * Na coluna "Departamento", crie uma **Lista Suspensa** com as op√ß√µes: "Vendas", "Marketing", "TI", "RH". (Aten√ß√£o para os dados existentes que podem n√£o bater).
    3.  **Formata√ß√£o Condicional**:
        * Na coluna "Sal√°rio", aplique uma **Barra de Dados** para uma visualiza√ß√£o r√°pida.
        * Destaque em **negrito e cor azul** todos os funcion√°rios do departamento "Vendas" (use "Regras de Realce de C√©lulas" > "Mais Regras" > "Usar uma f√≥rmula para determinar quais c√©lulas devem ser formatadas" e a f√≥rmula).
    4.  **C√°lculo de Idade**: Crie uma coluna "Idade (Anos)". Use **`DATADIF`** para calcular a idade de cada funcion√°rio com base na "Data Nasc." e a data de hoje (`HOJE()`).
    5.  **Dica**: Congele os pain√©is na primeira linha e na primeira coluna (`ID Func.`) para facilitar a visualiza√ß√£o ao rolar.
    """)
    with st.expander("Verificar Respostas (Sugest√£o de F√≥rmulas)"):
        st.markdown("""
        * **Nome Limpo (C2)**: `=PRI.MAI√öSCULA(ARRUMAR(SUBSTITUIR(B2;"_";" ")))`
        * **Valida√ß√£o Sal√°rio**: Selecione a coluna Sal√°rio. Dados > Valida√ß√£o de Dados > Permitir: N√∫mero Inteiro > Dados: entre > M√≠nimo: 1000, M√°ximo: 10000.
        * **Valida√ß√£o Departamento**: Selecione a coluna Departamento. Dados > Valida√ß√£o de Dados > Permitir: Lista > Fonte: "Vendas;Marketing;TI;RH".
        * **Formata√ß√£o Condicional Departamento**: Selecione o intervalo dos dados de nome completo (ex: C2:C5). P√°gina Inicial > Formata√ß√£o Condicional > Nova Regra > Usar uma f√≥rmula... > F√≥rmula: `=C2="Vendas"` (ou use `=$F2="Vendas"` se a coluna de Departamento for F). Formate como desejar.
        * **Idade (Anos) (H2)**: `=DATADIF(C2; HOJE(); "y")`
        """)
    st.markdown("---")


def quiz_dicas_produtividade():
    st.header("‚ùì Quiz: Dicas de Produtividade e Boas Pr√°ticas")
    st.write("Verifique seu conhecimento sobre aprimoramento e integridade dos dados!")

    st.subheader("Pergunta 1")
    q1_options = ["Somente altera a cor da fonte.", "Define a formata√ß√£o da c√©lula para negrito.", "Aplica formatos automaticamente com base em regras definidas.", "Exclui c√©lulas que n√£o atendem a um crit√©rio."]
    q1_answer = st.radio("Qual a principal fun√ß√£o da Formata√ß√£o Condicional?", q1_options, key="q1_dicas")
    if st.button("Verificar Pergunta 1", key="btn_q1_dicas"):
        if q1_answer == "Aplica formatos automaticamente com base em regras definidas.":
            st.success("Correto! üéâ √â uma ferramenta visual poderosa para an√°lise.")
        else:
            st.error("Incorreto. A formata√ß√£o condicional √© din√¢mica e baseada em regras.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["`=HOJE(ANO())`", "`=AGORA()`", "`=DIA(HOJE())`", "`=DATADIF(A1; HOJE(); 'm')`"]
    q2_answer = st.radio("Voc√™ quer calcular o n√∫mero de meses entre uma data de in√≠cio (em A1) e a data atual. Qual a f√≥rmula mais adequada?", q2_options, key="q2_dicas")
    if st.button("Verificar Pergunta 2", key="btn_q2_dicas"):
        if q2_answer == "`=DATADIF(A1; HOJE(); 'm')`":
            st.success("Correto! üéâ `DATADIF` √© a fun√ß√£o ideal para calcular diferen√ßas entre datas.")
        else:
            st.error("Ops! Lembre-se da fun√ß√£o espec√≠fica para calcular a diferen√ßa entre datas.")
    st.markdown("---")

    st.subheader("Pergunta 3")
    q3_options = ["`=MAI√öSCULA(A1)`", "`=ARRUMAR(A1)`", "`=PRI.MAI√öSCULA(A1)`", "`=LIMPAR(A1)`"]
    q3_answer = st.radio("Qual fun√ß√£o √© mais adequada para remover espa√ßos extras no in√≠cio, fim ou entre palavras de uma c√©lula (A1)?", q3_options, key="q3_dicas")
    if st.button("Verificar Pergunta 3", key="btn_q3_dicas"):
        if q3_answer == "`=ARRUMAR(A1)`":
            st.success("Correto! üéâ `ARRUMAR` √© essencial para a limpeza de dados de texto.")
        else:
            st.error("Incorreto. As outras fun√ß√µes n√£o lidam especificamente com espa√ßos extras.")
    st.markdown("---")


def power_query_modulo():
    st.header("6. üöÄ Desvendando o Power Query: Transforma√ß√£o de Dados")
    st.write("O **Power Query** (tamb√©m conhecido como **Obter e Transformar Dados**) √© uma ferramenta revolucion√°ria do Excel que permite importar, limpar e transformar dados de diversas fontes sem precisar de f√≥rmulas complexas. √â um divisor de √°guas na an√°lise de dados!")

    st.subheader("6.1. O que √© e Por que Usar o Power Query?")
    st.markdown("""
    O Power Query √© um **motor de ETL (Extract, Transform, Load)** embutido no Excel e em outras ferramentas da Microsoft (como Power BI). Ele automatiza o processo de:
    * **Extrair**: Conectar-se a diversas fontes de dados (arquivos CSV, TXT, Excel, Pastas, Bancos de Dados, Web, etc.).
    * **Transformar**: Limpar, remodelar, combinar e enriquecer os dados (remover duplicatas, renomear colunas, dividir colunas, mesclar tabelas, dinamizar/desdinamizar, etc.).
    * **Carregar**: Levar os dados transformados para uma planilha do Excel ou para o Modelo de Dados.

    **Vantagens:**
    * **Automa√ß√£o**: Uma vez criada a transforma√ß√£o, ela pode ser atualizada com um clique.
    * **Limpeza de Dados**: Padroniza e organiza dados "sujos".
    * **Combinar Dados**: Mescla e anexa tabelas de diferentes fontes facilmente.
    * **N√£o Destrutivo**: As transforma√ß√µes n√£o alteram a fonte original dos dados.
    * **Curva de Aprendizagem Visual**: Muitas opera√ß√µes s√£o feitas clicando e arrastando, sem necessidade de c√≥digo complexo (embora ele use a linguagem M por tr√°s).
    """)

    st.subheader("6.2. Conectando e Transformando Dados (Exemplos Pr√°ticos)")
    st.write("Vamos ver alguns exemplos de como o Power Query pode facilitar sua vida. Voc√™ encontrar√° as op√ß√µes do Power Query na guia **Dados** > grupo **Obter e Transformar Dados**.")

    st.markdown("""
    **Exemplo 1: Importar Dados de uma Pasta (Combine Arquivos)**
    Imagine que voc√™ recebe relat√≥rios de vendas mensais em arquivos CSV separados, todos na mesma pasta.
    1.  V√° em **Dados** > **Obter Dados** > **De Arquivo** > **De Pasta**.
    2.  Navegue at√© a pasta que cont√©m seus arquivos CSV.
    3.  Clique em **Combinar e Transformar Dados**.
    4.  O Power Query analisa um dos arquivos como "amostra" e aplica as transforma√ß√µes aos demais. Ele criar√° uma √∫nica tabela combinada.
        * **Transforma√ß√µes Comuns**: Remover colunas desnecess√°rias, renomear colunas, alterar tipo de dados (Texto para N√∫mero, etc.).

    **Exemplo 2: Limpar e Remodelar Dados (Editor do Power Query)**
    Voc√™ tem uma lista de produtos onde o `Nome do Produto` e o `C√≥digo do Produto` est√£o na mesma coluna, separados por um h√≠fen.
    1.  Importe seus dados (ex: de uma planilha Excel). Clique na tabela > **Dados** > **Da Tabela/Intervalo**.
    2.  No **Editor do Power Query**:
        * Selecione a coluna.
        * V√° na guia **Transformar** > **Dividir Coluna** > **Por Delimitador** (escolha o h√≠fen).
        * Renomeie as novas colunas.
        * Voc√™ tamb√©m pode usar "Remover Linhas" (duplicatas, vazias), "Preencher" (para dados em hierarquia), "Dinamizar Coluna" (para transformar linhas em colunas e vice-versa).

    **Exemplo 3: Mesclar Tabelas (VLOOKUP do Power Query)**
    Voc√™ tem uma tabela de Vendas (com `ID Produto`) e uma tabela de Produtos (com `ID Produto` e `Pre√ßo Unit√°rio`). Quer adicionar o `Pre√ßo Unit√°rio` na tabela de Vendas.
    1.  Importe ambas as tabelas para o Power Query.
    2.  Na guia **P√°gina Inicial** > **Combinar** > **Mesclar Consultas**.
    3.  Escolha sua tabela principal (Vendas) e a tabela a ser mesclada (Produtos).
    4.  Selecione a coluna comum (`ID Produto`) em ambas as tabelas.
    5.  Escolha o tipo de uni√£o (geralmente "Externa Esquerda").
    6.  Uma nova coluna aparecer√°. Clique no bot√£o de expans√£o no cabe√ßalho dessa nova coluna e selecione `Pre√ßo Unit√°rio`.

    Cada passo que voc√™ faz no Power Query √© gravado como um "Passo Aplicado" (√† direita). Voc√™ pode edit√°-los ou exclu√≠-los a qualquer momento.
    """)
    st.markdown("---")

    st.subheader("Exerc√≠cio 6: Importando e Transformando Dados com Power Query")
    st.write("Este exerc√≠cio √© um pouco diferente, pois voc√™ precisa *execut√°-lo diretamente no Excel* para entender o Power Query. Crie os seguintes arquivos e simule os passos:")

    st.markdown("""
    **Parte A: Consolidar M√∫ltiplos Arquivos CSV**
    1.  Crie uma pasta no seu computador chamada `RelatoriosVendas`.
    2.  Dentro dela, crie 2 arquivos de texto (`.txt`) e salve-os como `.csv` (Salvar como > Tipo: Todos os Arquivos > Nome: `Vendas_Janeiro.csv`, `Vendas_Fevereiro.csv`).
        * **`Vendas_Janeiro.csv`**:
            ```csv
            Data,Produto,Valor
            05/01/2024,Caneta,10.50
            10/01/2024,Lapis,5.20
            ```
        * **`Vendas_Fevereiro.csv`**:
            ```csv
            Data,Produto,Valor
            03/02/2024,Caderno,20.00
            15/02/2024,Caneta,10.50
            ```
    3.  No Excel, v√° em **Dados** > **Obter Dados** > **De Arquivo** > **De Pasta**.
    4.  Navegue at√© a pasta `RelatoriosVendas` e clique em Abrir.
    5.  Na janela que aparece, clique em **Combinar e Transformar Dados**.
    6.  No Editor do Power Query, observe como as duas tabelas foram combinadas.
    7.  Altere o tipo de dados da coluna `Valor` para "N√∫mero Decimal" (se n√£o estiver j√°).
    8.  Clique em **P√°gina Inicial** > **Fechar e Carregar Para...** > **Somente Criar Conex√£o**. (Isso √© importante para a Parte B).

    **Parte B: Mesclando Informa√ß√µes de Produtos**
    1.  No mesmo arquivo Excel, em uma nova planilha, crie a tabela `Produtos` (dados manualmente):
        ```
        | Produto | Categoria | Pre√ßo Unit√°rio |
        |---------|-----------|----------------|
        | Caneta  | Papelaria | 2.50           |
        | Lapis   | Papelaria | 1.00           |
        | Caderno | Escolar   | 15.00          |
        ```
    2.  Selecione esta tabela `Produtos`. V√° em **Dados** > **Da Tabela/Intervalo**. O Editor do Power Query abrir√° com a tabela `Produtos`. Clique em **Fechar e Carregar Para...** > **Somente Criar Conex√£o**.
    3.  Agora, volte para o Editor do Power Query (Dados > Obter Dados > Iniciar Editor do Power Query...).
    4.  Selecione a consulta que voc√™ criou na Parte A (deve ter um nome como `Vendas_Combinado`).
    5.  V√° em **P√°gina Inicial** > **Combinar** > **Mesclar Consultas**.
    6.  Na caixa de di√°logo 'Mesclar':
        * Escolha sua consulta `Vendas_Combinado` como a primeira tabela.
        * Escolha a consulta `Produtos` como a segunda tabela.
        * Selecione a coluna `Produto` em ambas as tabelas (ela ser√° a chave para a uni√£o).
        * Deixe o Tipo de Jun√ß√£o como "Externa Esquerda (Todas da primeira, correspondentes da segunda)". Clique em OK.
    7.  Uma nova coluna com o nome da segunda tabela aparecer√°. Clique no √≠cone de duas setas no cabe√ßalho dela e desmarque "Usar nome da coluna original como prefixo", selecione apenas as colunas `Categoria` e `Pre√ßo Unit√°rio`.
    8.  Clique em **Fechar e Carregar**.

    Voc√™ ter√° uma √∫nica tabela no Excel com as vendas combinadas de Janeiro e Fevereiro, e agora, com a Categoria e o Pre√ßo Unit√°rio de cada produto! Isso √© o Power Query em a√ß√£o!
    """)
    st.markdown("---")


def quiz_power_query():
    st.header("‚ùì Quiz: Desvendando o Power Query")
    st.write("Vamos ver o que voc√™ aprendeu sobre essa ferramenta poderosa!")

    st.subheader("Pergunta 1")
    q1_options = ["√â uma ferramenta para criar gr√°ficos.", "√â uma linguagem de programa√ß√£o VBA.", "√â um motor de ETL para importar, limpar e transformar dados.", "Serve apenas para renomear colunas."]
    q1_answer = st.radio("Qual a principal fun√ß√£o do Power Query no Excel?", q1_options, key="q1_pq")
    if st.button("Verificar Pergunta 1", key="btn_q1_pq"):
        if q1_answer == "√â um motor de ETL para importar, limpar e transformar dados.":
            st.success("Correto! üéâ O Power Query simplifica o trabalho com dados brutos.")
        else:
            st.error("Incorreto. Lembre-se do foco principal do Power Query: extra√ß√£o, transforma√ß√£o e carregamento.")
    st.markdown("---")

    st.subheader("Pergunta 2")
    q2_options = ["O `PROCV` √© melhor para combinar dados grandes.", "O Power Query automatiza o processo, enquanto o `PROCV` precisa ser arrastado.", "O Power Query s√≥ funciona com arquivos CSV.", "O `PROCV` n√£o permite limpeza de dados."]
    q2_answer = st.radio("Qual a principal vantagem de usar o Power Query para combinar dados (mesclar tabelas) em vez de m√∫ltiplos `PROCV`?", q2_options, key="q2_pq")
    if st.button("Verificar Pergunta 2", key="btn_q2_pq"):
        if q2_answer == "O Power Query automatiza o processo, enquanto o `PROCV` precisa ser arrastado.":
            st.success("Correto! üéâ A automa√ß√£o e a capacidade de lidar com grandes volumes de dados s√£o grandes vantagens.")
        else:
            st.error("Ops! Pense na escalabilidade e repeti√ß√£o de tarefas. O Power Query brilha a√≠.")
    st.markdown("---")


def projeto_final():
    st.header("7. üèÜ Projeto Final: Construindo um Dashboard Interativo de Vendas")
    st.write("Chegou a hora de colocar todo o seu conhecimento em pr√°tica! Neste projeto, voc√™ vai construir um dashboard de vendas completo, usando todas as ferramentas e t√©cnicas que aprendeu.")

    st.subheader("7.1. Cen√°rio e Dados")
    st.markdown("""
    Imagine que voc√™ √© o analista de vendas de uma empresa e precisa criar um painel que mostre o desempenho de vendas por produto, vendedor e regi√£o ao longo do tempo.

    **Baixe ou crie a seguinte base de dados de vendas (idealmente em uma planilha chamada 'DadosBrutos'):**

    **`dados_vendas.xlsx`** (Exemplo de estrutura, preencha com ~50-100 linhas de dados variados)

    | ID Venda | Data Venda | Vendedor | Regi√£o | Produto | Categoria | Quantidade | Pre√ßo Unit√°rio |
    |----------|------------|----------|--------|---------|-----------|------------|----------------|
    | V001     | 01/01/2024 | Ana Silva| Sudeste| Caneta  | Papelaria | 10         | 2.50           |
    | V002     | 05/01/2024 | Jo√£o Fdez| Norte  | Caderno | Papelaria | 5          | 12.00          |
    | V003     | 10/01/2024 | Ana Silva| Sudeste| Mouse   | Eletr√¥nicos| 2          | 50.00          |
    | ... (mais dados variados) ...                                                                   |
    """)

    st.subheader("7.2. Passos para o Dashboard")
    st.markdown("""
    Siga estes passos para construir seu dashboard:

    1.  **Prepara√ß√£o dos Dados (Limpeza e Colunas Calculadas):**
        * Na planilha `DadosBrutos`, adicione uma coluna **`Valor Total`** (`Quantidade` * `Pre√ßo Unit√°rio`).
        * Adicione uma coluna **`M√™s da Venda`** (`=M√äS(Data Venda)`).
        * Adicione uma coluna **`Ano da Venda`** (`=ANO(Data Venda)`).
        * **Opcional/Avan√ßado**: Use o **Power Query** para importar esses dados, fazer as colunas calculadas e garantir a limpeza (ex: `ARRUMAR` nomes, `MAI√öSCULA` em categorias, etc.). Carregue para uma **conex√£o apenas**.

    2.  **Cria√ß√£o das Tabelas Din√¢micas:**
        * Crie uma **Nova Planilha** e chame-a de `Dashboard`.
        * Na planilha `DadosBrutos`, selecione seus dados (incluindo as novas colunas).
        * V√° em **Inserir** > **Tabela Din√¢mica**. Coloque-a na planilha `Dashboard`.
        * Crie as seguintes Tabelas Din√¢micas nesta aba `Dashboard` (pode ser uma do lado da outra):
            * **TD1: Vendas por Categoria**: `Categoria` em Linhas, `Soma de Valor Total` em Valores.
            * **TD2: Vendas por Vendedor**: `Vendedor` em Linhas, `Soma de Valor Total` em Valores.
            * **TD3: Vendas por Regi√£o e M√™s**: `Regi√£o` em Linhas, `M√™s da Venda` em Colunas, `Soma de Valor Total` em Valores.
            * **TD4: Total Geral de Vendas**: Apenas `Soma de Valor Total` em Valores (resultado √∫nico).

    3.  **Cria√ß√£o dos Gr√°ficos Din√¢micos:**
        * A partir de cada Tabela Din√¢mica, crie um **Gr√°fico Din√¢mico** apropriado:
            * TD1: **Gr√°fico de Pizza** (Vendas por Categoria)
            * TD2: **Gr√°fico de Barras** (Vendas por Vendedor)
            * TD3: **Gr√°fico de Linhas** (Vendas por Regi√£o ao longo dos meses - ou Colunas Agrupadas)
        * Posicione os gr√°ficos de forma organizada no seu `Dashboard`.

    4.  **Adicionando Interatividade:**
        * Insira **Segmenta√ß√µes de Dados (Slicers)** para `Regi√£o`, `Vendedor` e `Categoria`.
        * Insira uma **Linha do Tempo (Timeline)** para `Data Venda`.
        * **Conecte todos os Slicers e a Linha do Tempo a TODAS as Tabelas Din√¢micas** (clique no Slicer > **Op√ß√µes** > **Conex√µes de Relat√≥rio...**). Isso far√° com que um filtro em um slicer atualize tudo.

    5.  **Design e Formata√ß√£o:**
        * Remova os bot√µes de campo dos gr√°ficos (clique no gr√°fico > **Analisar Gr√°fico Din√¢mico** > **Bot√µes de Campo** > **Ocultar Todos**).
        * Ajuste tamanhos e posi√ß√µes dos gr√°ficos e slicers.
        * Adicione um t√≠tulo claro ao dashboard.
        * Oculte as linhas de grade da planilha `Dashboard` (Exibir > Linhas de Grade).
        * Formate os valores nos gr√°ficos e tabelas para moeda.

    **O Resultado:** Voc√™ ter√° um dashboard interativo que permite filtrar as vendas por vendedor, regi√£o, categoria e per√≠odo de tempo, visualizando os resultados instantaneamente nos gr√°ficos!
    """)
    st.subheader("7.3. Desafios Adicionais (Para Experts!)")
    st.markdown("""
    * **KPIs no Dashboard**: Crie c√©lulas que mostram KPIs (Key Performance Indicators) como:
        * **Total de Vendas no Per√≠odo Selecionado** (conectado aos slicers).
        * **N√∫mero de Vendas Realizadas**.
        * **M√©dia de Vendas por Transa√ß√£o**.
        * *Dica*: Use as fun√ß√µes `GETPIVOTDATA` ou simplesmente referencie as c√©lulas das Tabelas Din√¢micas ou fa√ßa novas TDs ocultas para os KPIs.
    * **Formata√ß√£o Condicional Avan√ßada**: Use formata√ß√£o condicional nos KPIs para indicar se est√£o acima/abaixo de uma meta com cores.
    * **Valida√ß√£o de Dados para Par√¢metros**: Se voc√™ tiver metas fixas, use valida√ß√£o de dados para criar listas de metas.
    * **Prote√ß√£o da Planilha**: Proteja sua planilha `Dashboard` para evitar altera√ß√µes acidentais nas f√≥rmulas e objetos (Revisar > Proteger Planilha).
    """)
    st.info("Parab√©ns! Voc√™ chegou ao final do curso. A pr√°tica leva √† perfei√ß√£o. Continue explorando e aplicando esses conhecimentos!")
    st.markdown("---")


if __name__ == "__main__":
    curso_excel()
